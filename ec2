https://medium.com/awesome-cloud
https://medium.com/@sumedhbhatkar80/aws-aws-lambda-and-how-to-use-it-e6ca84a5d2d7

ALB — Layer 7 (HTTP/HTTPS traffic), Flexible.
NLB — Layer 4 (TLS/TCP/UDP traffic), Static IPs.
CLB — Layer 4/7 (HTTP/TCP/SSL traffic), Legacy, Avoid

 1)NLB just forward requests whereas ALB examines the contents of the HTTP request header to determine where to route the request.
 So, application load balancer is performing content based routing.
 2)when we lunch multiple application ALB will differentiate between the two applications by examining the application layer data available to it.
  This difference means that NLB may end up sending requests to an application that has crashed or is offline, but ALB will never make that same mistake.

==============================================
 
 When considering the deployment of multiple applications on the same host sharing IP addresses (virtual hosts in old school speak),
 NLB will not differentiate between Application A and Application B when checking availability (indeed it cannot unless ports are different)
 but ALB will differentiate between the two applications by examining the application layer data available to it. 
 This difference means that NLB may end up sending requests to an application that has crashed or is offline, but ALB will never make that same mistake.

==============================================

https://medium.com/awesome-cloud/aws-difference-between-application-load-balancer-and-network-load-balancer-cb8b6cd296a4#:~:text=Application%20Load%20Balancer%20(as%20the,OSI%20model%2C%20Connection%20level).


classic loadbalancer
Works on layer 4(TCP) & layer 7( HTTP & HTTPS)
• Health check are TCP & HTTP based.
• They have fixed hostname
• E.g - mylb.region.elb.amazonaws.com

==============================================

Elastic Beanstalk:.
==================
https://www.quora.com/What-is-the-difference-between-AWS-Beanstalk-and-Lambda-Both-seem-to-be-serving-the-purpose-of-taking-care-of-infrastructure-maintenance
AWS Elastic Beanstalk is one such development tool implemented based on PaaS model.

AWS Elastic Beanstalk is an easy-to-use service for deploying and scaling web applications and services 

With AWS Elastic Beanstalk, a developer can deploy an application without provisioning the underlying infrastructure while maintaining high availability.


11

Elastic beanstalk and lambda are very different though some of the features may look similar. At high level, elastic beanstalk deploys a long running application whereas lambda deploys short running code function

Lambda can at maximum run for 15 minutes, whereas EB can run continuously. Generally, we deploy websites/apps on EB whereas lambda are generally used for triggered functionality like processing image when image gets uploaded to S3.

Lambda can only handle one request at a time whereas number of concurrent requests EB can handle depends on your underlying infrastructure. So, if you are having say 100 requests, 100 lambdas will be created whereas these 100 requests can be handled by one underlying EC2 instance in EB

Lambda is serverless (underlying infra is entirely abstracted from developer). Whereas EB is automation over infra provisioning. You can still see your EC2 instances, load balancer, auto scaling group etc. in your AWS console. You can even ssh/rdp to your instance and change running services. AWS EB allows you also to have your custom AMIs.

Lambda is having issue of cold starts as in lambda, infra needs to be provisioned on demand by AWS, whereas in EB, you generally have EC2 instances already provisioned to handle you
===================================

There are basically 3 pricing options in EC2:

Spot Instances
On-Demand Instances
Reserved Instances
Spot Instances is a pricing option which enables you to bid on unused EC2 instances.
The hourly price for a Spot Instance is set by AWS EC2, and it fluctuates according to the availability of the instances in a specific Availability Zone.

Basically, you will set a price for an instance above which you do not wish to get charged for.
The price that you set is for per hour basis, therefore the moment the price for that instance becomes greater
than what you have set, the instance gets shut down automatically.
On-Demand Instances are used when you want to pay for the hour, with no long-term commitments and upfront payments.
They are useful for applications that may have unpredictable workloads or for test applications that are being deployed for the first time.

Reserved Instances provide you with significant discounts as compared to On-Demand Instances. With Reserved Instances you reserve instances for a specific period 
of time with three payment options:

No Upfront
Partial Upfront
Full Upfront
And two-term lengths:

One Year Term
Three Year Term
The higher the upfront payment is, the more you save money.

https://stackoverflow.com/questions/66846750/what-is-the-difference-between-aws-lambda-aws-elastic-beanstalk
=====================================

https://drive.google.com/drive/search?q=ec2

====================================================

EmptyDir:

. An emptyDir volume is first created when a Pod is assigned to a Node and exists as long  as that Pod is running on that node.
. As the name says, it is initially empty. All Containers in the same Pod can read and write in the same emptyDir volume.
. When a Pod is restarted or removed, the data in the emptyDir is lost forever.

================================

HostPath:

A hostPath volume mounts a file or directory from the node's filesystem into the Pod.
You can specify whether the file/directory must already exist on the node or should be created on pod startup.
You can do it using a type attribute in the config file

=====

Persistent Volumes (PV) & Persistent Volume Claims (PVC):

1)Persistent Volume (PV) is an abstraction for the physical storage device that you have attached to the cluster. Pods can use this storage space using Persistent Volume Claims (PVC).
PV is independent of the lifecycle of the Pods. It means that data represented by a PV continue to exist as the cluster changes and as Pods are deleted and recreated.
 PV is not Namespaced, it is available to whole cluster. i.e PV is accessible to all namespaces.

2)Kubernetes looks for a PV that meets the criteria defined in the PVC, and if there is one, it matches claim to PV.
PVC must be in same namespace as the Pod. For each Pod, a PVC makes a storage consumption request within a namespace.



Storage Classes (SC):

. StorageClass provisions PV dynamically, when PVC claims it.

. StorageClass allows dynamically provision volumes for an incoming claim.

. StorageClass is used in conjunction with PVC that allow Pods to dynamically request a new storage.

. StorageClass use provisioners that are specific to the storage platform or cloud provider to give Kubernetes access to the physical storage















