ALB — Layer 7 (HTTP/HTTPS traffic), Flexible.
NLB — Layer 4 (TLS/TCP/UDP traffic), Static IPs.
CLB — Layer 4/7 (HTTP/TCP/SSL traffic), Legacy, Avoid

 1)NLB just forward requests whereas ALB examines the contents of the HTTP request header to determine where to route the request.
 So, application load balancer is performing content based routing.
 2)when we lunch multiple application ALB will differentiate between the two applications by examining the application layer data available to it.
  This difference means that NLB may end up sending requests to an application that has crashed or is offline, but ALB will never make that same mistake.

==============================================
 
 When considering the deployment of multiple applications on the same host sharing IP addresses (virtual hosts in old school speak),
 NLB will not differentiate between Application A and Application B when checking availability (indeed it cannot unless ports are different)
 but ALB will differentiate between the two applications by examining the application layer data available to it. 
 This difference means that NLB may end up sending requests to an application that has crashed or is offline, but ALB will never make that same mistake.

==============================================

https://medium.com/awesome-cloud/aws-difference-between-application-load-balancer-and-network-load-balancer-cb8b6cd296a4#:~:text=Application%20Load%20Balancer%20(as%20the,OSI%20model%2C%20Connection%20level).


classic loadbalancer
Works on layer 4(TCP) & layer 7( HTTP & HTTPS)
• Health check are TCP & HTTP based.
• They have fixed hostname
• E.g - mylb.region.elb.amazonaws.com

==============================================

Elastic Beanstalk:.
==================

AWS Elastic Beanstalk is one such development tool implemented based on PaaS model.

AWS Elastic Beanstalk is an easy-to-use service for deploying and scaling web applications and services 

With AWS Elastic Beanstalk, a developer can deploy an application without provisioning the underlying infrastructure while maintaining high availability.


===================================

There are basically 3 pricing options in EC2:

Spot Instances
On-Demand Instances
Reserved Instances
Spot Instances is a pricing option which enables you to bid on unused EC2 instances.
The hourly price for a Spot Instance is set by AWS EC2, and it fluctuates according to the availability of the instances in a specific Availability Zone.

Basically, you will set a price for an instance above which you do not wish to get charged for.
The price that you set is for per hour basis, therefore the moment the price for that instance becomes greater
than what you have set, the instance gets shut down automatically.
On-Demand Instances are used when you want to pay for the hour, with no long-term commitments and upfront payments.
They are useful for applications that may have unpredictable workloads or for test applications that are being deployed for the first time.

Reserved Instances provide you with significant discounts as compared to On-Demand Instances. With Reserved Instances you reserve instances for a specific period 
of time with three payment options:

No Upfront
Partial Upfront
Full Upfront
And two-term lengths:

One Year Term
Three Year Term
The higher the upfront payment is, the more you save money.

=====================================

https://drive.google.com/drive/search?q=ec2
