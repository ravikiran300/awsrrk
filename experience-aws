in nacl we allow ports and deny ports
nacl operates on subnet level

in security groubs instance level
in security we can't deny port and we can only allow


vpc perring
=========

you have two vpc and if u want communication between two vpcs
should do cidr should not overlapping
not transitative 
vpca and talk to vpcb but not a vpcc
vpcc shoud have perring to vpca to talk

u can talk different aws account using vpc perring

A short way to compute the number of hosts would be


=========================================

https://medium.com/geekculture/aws-vpc-and-subnet-cidr-calculation-and-allocation-cfbe69050712

vpc and subnet cidr calculation:
=================================
ipv4 is 32bits

https://medium.com/geekculture/aws-vpc-and-subnet-cidr-calculation-and-allocation-cfbe69050712

1) /32 in CIDR x.x.x.x/32 means use all 32 bits to form a range of addresses. In this case just one IP address is possible.

2) /24 in CIDR x.x.x.0/24 means fix the first 24 bits and use last 8 bits to form a range of addresses. In this case, there can be 2^8 IP addresses i.e. from x.x.x.0 to x.x.x.255.

3) /16 in CIDR x.x.0.0/16 means fix the first 16 bits and use the last 16 bits to form a range of addresses. In this case, there can be 2^16 IP addresses i.e. from x.x.0.0 to x.x.255.255.

4) /8 in CIDR x.0.0.0/8 means fix the first 8 bits and use the last 24 bits to form a range of addresses. In this case, there can be 2^24 IP addresses i.e. from x.0.0.0 to x.255.255.255.

5) /0 in CIDR 0.0.0.0/0 means fix the first 0 bits and use the last 32 bits to form a range of addresses. In this case, all the possible IP addresses are included in the range.



=============


https://stackoverflow.com/questions/57618233/cidr-and-number-of-ip-addresses

A short way to compute the number of hosts would be

2 ^ ( 32 - 24 ) - 2 = 256
Because:

We are doing bit operations (0, 1, two possible values)
An IP is a set of 4 octet, when an octet is 8 bits (4 * 8 = 32)
24 is your CIDR
There is two reserved IP on every subnet, the broadcast address and the subnet zero, they shouldn't be used for hosts

CIDR    Dotted Quad
/8      255.0.0.0
/16     255.255.0.0
/24     255.255.255.0
/32     255.255.255.255

=============================================
https://medium.com/@revathijoshi70/how-to-create-a-high-availability-web-site-using-autoscaling-and-application-load-balancer-6d0197116bb1

How to create a high-availability web site with an Application Load Balancer using Autoscaling and monitored by Cloudwatch

Objectives:
A Custom VPC with 3 Availability Zones for High Availability
Each Availability Zone has a public subnet ONLY.
There are two EC2 instances, created by a launch template which will have specifications to include custom VPCs in public subnets.
Next, we are going to add a bootstrap script to automatically install and setup the Apache Web Server in Advanced Details under User data.
This will enable to check IP addresses located in different Availability zones on the Apache test page..
Configure / Setup an auto-scaling group for the instances with an instance minimum of 2 and a maximum of 5. The scaling policy will use CloudWatch to scale after the CPU Utilization is above 80%
Create one Target Group and register both the EC2 instances.
Configure An Elastic Application Load Balancer which automatically distributes your network workload across multiple targets. 
Those targets can be an EC2 instance, S3 bucket or an IP address in multiple availability zones.
A stress tool will be used to stress an instance above 80% CPU Utilization to make sure the above scaling policy works.
